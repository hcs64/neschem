FUNCTION LISTING
================
FILE: E:\sf\neshla\source\_democode\game.as

OFFS: NAME
----- -----------------------------------------
----: inline	enable_interrupts()
----: inline	disable_interrupts()
----: inline	enable_decimal_mode()
----: inline	disable_decimal_mode()
----: inline	set_carry_flag()
----: inline	clear_carry_flag()
----: inline	reset_stack()
----: inline	nes_reset()
----: inline	system_initialize()
----: inline	ppu_ctl0_assign( newctl )
----: inline	ppu_ctl0_set( mask )
----: inline	ppu_ctl0_clear( mask )
----: inline	ppu_ctl0_adjust( clearmask, setmask )
----: inline	ppu_ctl0_xor( mask )
----: inline	ppu_ctl0_test( mask )
----: inline	ppu_enable_nmi( mask )
----: inline	ppu_disable_nmi()
----: inline	ppu_turn_off()
----: inline	ppu_turn_on_draw()
----: inline	ppu_turn_off_draw()
----: inline	ppu_set_nametable( nametable )
----: inline	ppu_xor_nametable()
----: inline	ppu_ctl1_assign( newctl )
----: inline	ppu_ctl1_set( mask )
----: inline	ppu_ctl1_clear( mask )
----: inline	ppu_ctl1_adjust( clearmask, setmask )
----: inline	ppu_ctl1_test( mask )
----: inline	ppu_set_palette_intensity( newbits )
----: inline	vblank_wait()
----: inline	vblank_wait_full()
----: inline	vblank_wait_for( amount )
----: inline	unvblank_wait()
----: inline	test_scanline()
----: inline	ppu_clean_latch()
----: inline	vram_clear_address()
----: inline	vram_set_address( newaddress )
----: inline	vram_set_address_i( newaddress )
----: inline	vram_set_scroll( x, y )
----: inline	vram_write( value )
----: inline	vram_write_ind( value )
----: inline	vram_write_x( value )
----: inline	vram_write_ind_y( value )
----: inline	vram_write_a()
----: inline	vram_write_regx()
----: inline	vram_write_16( value )
----: inline	vram_write_16_i( value )
----: inline	vram_read( dest )
----: inline	vram_ind_read( dest )
----: inline	vram_ind_y_read( dest )
----: inline	vram_read_a()
----: inline	vram_read_16( dest )
----: inline	vram_set_sprite_address( newaddress )
----: inline	vram_set_sprite_address_i( newaddress )
----: inline	vram_set_sprite_data( x, y, tile, attributes )
----: inline	vram_sprite_dma_copy( oamptr )
----: inline	reset_joystick()
----: inline	read_joystick0()
----: inline	read_joystick1()
----: inline	test_joystick1( buttonmask )
----: inline	test_joystick1_prev( buttonmask )
----: inline	test_button_release( buttonmask )
----: inline	test_button_press( buttonmask )
----: inline	mmc5_init()
----: inline	mmc5_select_prg_8000_a()
----: inline	mmc5_select_prg_8000( number )
----: inline	mmc5_select_prg_8000i( number )
----: inline	mmc5_save_prg_A000_bank_number()
----: inline	mmc5_select_prg_A000_a()
----: inline	mmc5_select_prg_A000( number )
----: inline	mmc5_select_prg_A000i_raw( number )
----: inline	mmc5_select_prg_A000i( number )
----: inline	mmc5_select_prg_A000i_push( number )
----: inline	mmc5_select_prg_A000_x_push( var )
----: inline	mmc5_select_prg_A000_push( var )
----: inline	mmc5_restore_prg_A000_pop()
----: inline	mmc5_restore_prg_A000( number )
----: inline	mmc5_select_prg_C000_a()
----: inline	mmc5_select_prg_C000( number )
----: inline	mmc5_select_prg_C000i( number )
----: inline	mmc5_select_prg_E000_a()
----: inline	mmc5_select_prg_E000( number )
----: inline	mmc5_select_prg_E000i( number )
----: inline	mmc5_multiply( valueA, valueB )
----: inline	assign( dest, value )
----: inline	assign_x( dest, value )
----: inline	x_assign_x( dest, src )
----: inline	x_assign_y( dest, src )
----: inline	assign_y( dest, value )
----: inline	x_assign( dest, src )
----: inline	y_assign( dest, src )
----: inline	assign_ind( dest, value )
----: inline	assign_ind_y( dest, value )
----: inline	ind_x_assign( dest, src )
----: inline	ind_y_assign( dest, src )
----: inline	assign_16_8( dest, value )
----: inline	assign_16_8_x( dest, value )
----: inline	assign_16_8_y( dest, value )
----: inline	assign_16_16( dest, value )
----: inline	assign_16_16_x( dest, value )
----: inline	y_assign_16_16_x( dest, value )
----: inline	assign_16_16_y( dest, value )
----: inline	ind_assign_16_16_x( dest, value )
----: inline	x_assign_16_16( dest, value )
----: inline	x_assign_16_16_x( dest, value )
----: inline	y_ind_assign_16_16( dest, value )
----: inline	y_assign_16_16( dest, value )
----: inline	assign_16i( dest, value )
----: inline	assign_16i_x( dest, value )
----: inline	assign_16i_y( dest, value )
----: inline	zero_16( dest )
----: inline	zero_32( dest )
----: inline	zero_16_x( dest )
----: inline	zero_16_y( dest )
----: inline	tyx()
----: inline	txy()
----: inline	test( dest, mask )
----: inline	test_x( dest, mask )
----: inline	test_16_8( dest, mask )
----: inline	test_16_16( dest, mask )
----: inline	test_16i( dest, mask )
----: inline	or( dest, mask )
----: inline	or_x_a( dest )
----: inline	or_x( dest, mask )
----: inline	or_y_a( dest )
----: inline	or_y( dest, mask )
----: inline	or_16_8( dest, mask )
----: inline	or_16_8_x( dest, mask )
----: inline	or_16_16( dest, mask )
----: inline	or_16_16_x( dest, mask )
----: inline	or_16i( dest, mask )
----: inline	or_16i_x( dest, mask )
----: inline	xor( dest, mask )
----: inline	xor_x( dest, mask )
----: inline	xor_16_8( dest, mask )
----: inline	xor_16_8_x( dest, mask )
----: inline	xor_16_16( dest, mask )
----: inline	xor_16_16_x( dest, mask )
----: inline	xor_16i( dest, mask )
----: inline	xor_16i_x( dest, mask )
----: inline	and_8( dest, mask )
----: inline	and_x( dest, mask )
----: inline	and_y( dest, mask )
----: inline	and_16_8( dest, mask )
----: inline	and_16_8_x( dest, mask )
----: inline	and_16_16( dest, mask )
----: inline	and_16_16_x( dest, mask )
----: inline	and_16i( dest, mask )
----: inline	and_16i_x( dest, mask )
----: inline	and_or( dest, and_mask, or_mask )
----: inline	add( dest, value )
----: inline	add_x( dest, value )
----: inline	y_add( dest, value )
----: inline	add_x_a( dest )
----: inline	add_16_8_a( dest )
----: inline	adds_16_8_a( dest )
----: inline	add_16_8_a_x( dest )
----: inline	adds_16_8_a_x( dest )
----: inline	adds_16_8_a_x_to( src, dest )
----: inline	add_16_8( dest, value )
----: inline	adds_16_8( dest, value )
----: inline	add_16_8_to( src, value, dest )
----: inline	add_16_8yind_to( src, value, dest )
----: inline	adds_16_8yind_to( src, value, dest )
----: inline	add_16_8_a_to_x( src, dest )
----: inline	add_16_8_x( dest, value )
----: inline	adds_16_8_x( dest, value )
----: inline	add_16_16( dest, value )
----: inline	add_16_16_x( dest, value )
----: inline	x_add_16_8_to( dest, value, src )
----: inline	add_8y_16x_to_16( var8, var16, dest16 )
----: inline	x_sub_16_8_to( dest, value, src )
----: inline	add_16i( dest, value )
----: inline	add_16i_x( dest, value )
----: inline	sub( dest, value )
----: inline	sub_x( dest, value )
----: inline	sub_16_8_a( dest )
----: inline	sub_16_8_a_to( value, dest )
----: inline	sub_16_8_a_x( dest )
----: inline	x_sub_16_8_a_to( value, dest )
----: inline	y_sub_16_8_a_to( value, dest )
----: inline	sub_16_8( dest, value )
----: inline	sub_16_8_to( src, value, dest )
----: inline	sub_16_8_x( dest, value )
----: inline	sub_16_16( dest, value )
----: inline	sub_16_16_to( valuea, valueb, dest )
----: inline	add_16_16_to( valuea, valueb, dest )
----: inline	sub16_16_x( dest, value )
----: inline	sub_16i( dest, value )
----: inline	sub_16i_x( dest, value )
----: inline	mul_a( dest, multipiler )
----: inline	mul_x_a( dest, multipiler )
----: inline	mul( dest, multipiler )
----: inline	mul_x( dest, multipiler )
----: inline	mul_16_8( dest, multipiler )
----: inline	mul_16_8_x( dest, multipiler )
----: inline	asl2_a()
----: inline	asl3_a()
----: inline	asl4_a()
----: inline	asl5_a()
----: inline	asl6_a()
----: inline	asl7_a()
----: inline	asl_16_1( dest )
----: inline	asl_16( dest, amount )
----: inline	asl_16_to( dest, src, amount )
----: inline	asl_8_to_16( dest, src, amount )
----: inline	asl2_8_a_to_16( dest )
----: inline	lsr2_a()
----: inline	lsr3_a()
----: inline	lsr4_a()
----: inline	lsr5_a()
----: inline	lsr6_a()
----: inline	lsr7_a()
----: inline	lsr_16( dest, amount )
----: inline	lsr_16_to( dest, src, amount )
----: inline	lsr_16_by_6_to_8( dest, src )
----: inline	lsr_16_by_5_to_8( dest, src )
----: inline	lsr_16_by_4_to_8( dest, src )
----: inline	lsr_16_by_3_to_8( dest, src )
----: inline	lsr_16_by_2_to_8( dest, src )
----: inline	div( dest, amount )
----: inline	div_with_rem( dest, amount )
----: inline	div_16_8_to_x( dest, amount )
----: inline	mod_16_by_240_to_8( dest, src )
----: inline	mod_16_to_8( dest, src, val )
----: inline	abs_a()
----: inline	abs( number )
----: inline	abs_16( number )
----: inline	neg_a()
----: inline	neg( number )
----: inline	neg_16( number )
----: inline	inc_16( number )
----: inline	inc_16_limit( number )
----: inline	inc_16_x( number )
----: inline	dec_16( number )
----: inline	dec_16_x( number )
----: inline	clip_16( number )
----: inline	compare( src, value )
----: inline	compare_x( src, value )
----: inline	x_compare_x( src, value )
----: inline	compare_16_16( src, value )
----: inline	compare_16_16_x( src, value )
----: inline	compare_16_x_16_x( src, value )
----: inline	compare_16_y_16_x( src, value )
----: inline	compare_8_y_8_x( src, value )
----: inline	compare_16_x_16_y( src, value )
----: inline	compare_8_x_8_y( src, value )
----: inline	compare_8_x_8_x( src, value )
----: inline	compare_8_x_8( src, value )
----: inline	compare_8_y_8_y( src, value )
----: inline	compare_16_16_y( src, value )
----: inline	compare_16i( src, value )
----: inline	pusha()
----: inline	popa()
----: inline	toss16()
----: inline	push( value )
----: inline	push_x( src )
----: inline	push_16( src )
----: inline	push_16_x( src )
----: inline	pop( dest )
----: inline	pop_x( dest )
----: inline	pop_16( dest )
----: inline	pop_16_x( dest )
----: inline	peek()
----: inline	pushx()
----: inline	popx()
----: inline	peekx()
----: inline	pushy()
----: inline	popy()
----: inline	peeky()
----: inline	pushp()
----: inline	popp()
----: inline	pushsp()
----: inline	popsp()
----: inline	push_all()
----: inline	pop_all()
----: inline	memcpy_inline( dest, src, size )
----: inline	memset_inline( memdest, value, memsize )
----: inline	vram_memcpy_inline( src, size )
----: inline	vram_memcpy_rev_inline( src, size )
----: inline	vram_maskcpy_inline( src, size )
C000: function	Turn_Video_On()
C006: function	Turn_Video_Off()
C00C: function	vram_write_hex_a()
----: inline	vram_write_string_inl( addr, str )
C039: function	vram_write_string()
C058: function	vram_init()
C0B9: function	palette_memset()
----: inline	palette_memset_inl( col )
C0E1: function	pal_animate()
C10D: function	pal_animate2()
----: inline	wait_for( amount )
C138: function	wait_for_func()
C146: function	message_error()
----: inline	custom_system_initialize()
C17F: interrupt	int_irq()
C180: interrupt	int_nmi()
C181: interrupt	main()
C1DB: function	jsr_ind()
